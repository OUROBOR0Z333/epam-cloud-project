---
- name: Deploy Application Locally
  hosts: localhost
  connection: local
  gather_facts: yes

  vars:
    project_name: "Epam_Cloud_Project"
    app_source_dir: "/home/ouroboroz/Projects/Epam_Cloud_Project/app-source"
    deployment_dir: "/tmp/{{ project_name }}_app"
    backend_port: 3000
    frontend_port: 3030

  tasks:
    - name: Display project information
      debug:
        msg: "Deploying {{ project_name }} application components locally"

    - name: Create application deployment directory
      file:
        path: "{{ deployment_dir }}"
        state: directory
        mode: '0755'

    - name: Copy backend application files
      copy:
        src: "{{ app_source_dir }}/movie-analyst-api/"
        dest: "{{ deployment_dir }}/movie-analyst-api"
        mode: '0755'
        remote_src: no

    - name: Copy frontend application files
      copy:
        src: "{{ app_source_dir }}/movie-analyst-ui/"
        dest: "{{ deployment_dir }}/movie-analyst-ui"
        mode: '0755'
        remote_src: no

    - name: Create .env file for backend
      copy:
        content: |
          DB_HOST=localhost
          DB_USER=applicationuser
          DB_PASS=applicationuser
          DB_NAME=movie_db
          PORT={{ backend_port }}
        dest: "{{ deployment_dir }}/movie-analyst-api/.env"

    - name: Create .env file for frontend
      copy:
        content: |
          BACKEND_URL=localhost:{{ backend_port }}
          PORT={{ frontend_port }}
        dest: "{{ deployment_dir }}/movie-analyst-ui/.env"

    - name: Install Node.js dependencies for backend
      command: npm install
      args:
        chdir: "{{ deployment_dir }}/movie-analyst-api"
      environment:
        NODE_PATH: "{{ ansible_env.HOME }}/.nvm/versions/node/v16.15.0/lib/node_modules"
      register: backend_npm_result
      failed_when: false  # Don't fail if npm is not available

    - name: Install Node.js dependencies for frontend
      command: npm install
      args:
        chdir: "{{ deployment_dir }}/movie-analyst-ui"
      environment:
        NODE_PATH: "{{ ansible_env.HOME }}/.nvm/versions/node/v16.15.0/lib/node_modules"
      register: frontend_npm_result
      failed_when: false  # Don't fail if npm is not available

    - name: Check if Node.js is available
      command: node --version
      register: node_version_result
      failed_when: false
      changed_when: false

    - name: Display Node.js status
      debug:
        msg: 
          - "Node.js status: {{ 'Available' if node_version_result.rc == 0 else 'Not available' }}"
          - "Backend npm install: {{ 'Success' if backend_npm_result.rc == 0 else 'Failed (likely due to Node.js not being installed)' }}"
          - "Frontend npm install: {{ 'Success' if frontend_npm_result.rc == 0 else 'Failed (likely due to Node.js not being installed)' }}"

    - name: Create application startup script
      copy:
        content: |
          #!/bin/bash
          # Script to start the local application

          DEPLOYMENT_DIR="{{ deployment_dir }}"
          BACKEND_PORT="{{ backend_port }}"
          FRONTEND_PORT="{{ frontend_port }}"

          echo "Starting local application deployment..."
          echo "Backend will run on port: $BACKEND_PORT"
          echo "Frontend will run on port: $FRONTEND_PORT"

          # Start backend in background
          echo "Starting backend..."
          cd $DEPLOYMENT_DIR/movie-analyst-api
          export DB_HOST=localhost
          export DB_USER=applicationuser
          export DB_PASS=applicationuser
          export DB_NAME=movie_db
          export PORT=$BACKEND_PORT
          nohup node server.js > backend.log 2>&1 &

          # Wait a moment for backend to start
          sleep 3

          # Start frontend in background
          echo "Starting frontend..."
          cd $DEPLOYMENT_DIR/movie-analyst-ui
          export BACKEND_URL=localhost:$BACKEND_PORT
          export PORT=$FRONTEND_PORT
          nohup node server.js > frontend.log 2>&1 &

          echo "Application started successfully!"
          echo "Access the frontend at: http://localhost:$FRONTEND_PORT"
          echo "Access the backend API at: http://localhost:$BACKEND_PORT"
          echo "Check logs in $DEPLOYMENT_DIR/ for any issues"
        dest: "{{ deployment_dir }}/start_app.sh"
        mode: '0755'

    - name: Create application stop script
      copy:
        content: |
          #!/bin/bash
          # Script to stop the local application

          echo "Stopping local application..."

          # Kill backend process (if running)
          lsof -i :3000 | grep LISTEN | awk '{print $2}' | xargs kill -9 2>/dev/null || echo "No backend process found on port 3000"

          # Kill frontend process (if running)
          lsof -i :3030 | grep LISTEN | awk '{print $2}' | xargs kill -9 2>/dev/null || echo "No frontend process found on port 3030"

          echo "Application stopped."
        dest: "{{ deployment_dir }}/stop_app.sh"
        mode: '0755'

    - name: Display deployment status
      debug:
        msg: 
          - "Application deployment completed"
          - "Files deployed to: {{ deployment_dir }}"
          - "To start the application, run: {{ deployment_dir }}/start_app.sh"
          - "Backend will run on: http://localhost:{{ backend_port }}"
          - "Frontend will run on: http://localhost:{{ frontend_port }}"